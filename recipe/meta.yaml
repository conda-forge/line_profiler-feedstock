{% set name = "line_profiler" %}
{% set version = "3.4.0" %}
{% set checksum = "b6b0a8100a2829358e31ef7c6f427b1dcf2b1d8e5d38b55b219719ecf758aee5" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ checksum }}

build:
  number: 1
  script:
    # We can't use CMAKE_GENERATOR implicitly via conda_build_config.yaml, yet,
    # due to https://github.com/AnacondaRecipes/aggregate/pull/182
    - set "CMAKE_GENERATOR={{ CMAKE_GENERATOR }}"  # [win]
    - export CMAKE_GENERATOR=Ninja  # [not (win or (osx and arm64))]
    - export CMAKE_OSX_ARCHITECTURES="arm64"  # [osx and arm64]
    - {{ PYTHON }} -m pip install . -vv
  entry_points:
    - kernprof = kernprof:main

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - scikit-build                           # [build_platform != target_platform]
    - {{ compiler("cxx") }}
    - cmake
    - ninja
  host:
    - python
    - pip
    - cython
    - scikit-build
  run:
    - python
    - ipython >=0.13

test:
  imports:
    - kernprof
    - line_profiler

  commands:
    - kernprof --help
    - python -m kernprof --help

about:
  home: https://github.com/pyutils/line_profiler
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: A module for monitoring memory usage of a python program
  dev_url: https://github.com/pyutils/line_profiler
  doc_url: https://github.com/pyutils/line_profiler

extra:
  recipe-maintainers:
    - jakirkham
    - grlee77
